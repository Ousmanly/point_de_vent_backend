// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Produits {
//   id            Int             @id @default(autoincrement())
//   nom           String          @db.VarChar(250)
//   stock         Int
//   prix          Decimal         @db.Decimal(15, 2)
//   seuil         Int
//   categorie     String          @db.VarChar(250)
//   date_ajout    DateTime        @default(now())
//   code_barre    String          @db.VarChar(100)
//   DetailVentes   DetailVentes[]
//   DetailReceptions DetailReceptions[]
//   Inventaires    Inventaires[]
//   Mouvements     Mouvements[]
// }

// model DetailVentes {
//   id             Int      @id @default(autoincrement())
//   montant_total  Int
//   quantite_vendue Int
//   // Relations
//   produitId      Int
//   Produits        Produits @relation(fields: [produitId], references: [id])
//   venteId        Int
//   Ventes          Ventes @relation(fields: [venteId], references: [id])
// }

// model Ventes {
//   id          Int      @id @default(autoincrement())
//   date_vente  DateTime
//   // Relations
//   detailVentes DetailVentes[]
//   utilisateurId Int
//   Utilisateur  Utilisateurs @relation(fields: [utilisateurId], references: [id])
// }

// model DetailReceptions {
//   id        Int      @id @default(autoincrement())
//   quantite  Int
//   // Relations
//   produitId Int
//   Produits   Produits @relation(fields: [produitId], references: [id])
//   receptionId Int
//   Receptions Receptions @relation(fields: [receptionId], references: [id])
// }

// model Receptions {
//   id             Int      @id @default(autoincrement())
//   date_reception DateTime
//   // Relations
//   detailReceptions DetailReceptions[]
//   fournisseurId Int
//   Fournisseurs Fournisseurs @relation(fields: [fournisseurId], references: [id])
// }

// model Fournisseurs {
//   id      Int      @id @default(autoincrement())
//   nom     String   @db.VarChar(100)
//   // Relations
//   receptions Receptions[]
// }

// model Mouvements {
//   id       Int      @id @default(autoincrement())
//   quantite Int
//   produitId Int
//   Produits   Produits @relation(fields: [produitId], references: [id])
// }

// model Inventaires {
//   id        Int      @id @default(autoincrement())
//   note      String   @db.Text
//   quantite  Int
//   date_maj  DateTime  @default(now())
//   produitId Int
//   Produits   Produits @relation(fields: [produitId], references: [id])
// }

enum Role {
  ADMIN
  CAISSIER
}

// model Utilisateurs {
//   id          Int        @id @default(autoincrement())
//   nom         String
//   mot_de_pass String
//   role        Role       @default(CAISSIER) 
//   email       String     @unique
//   ventes      Ventes[]
// }

model Utilisateurs {
  id            Int        @id @default(autoincrement())
  nom           String     @db.VarChar(250)
  mot_de_pass  String      @db.VarChar(100)
  role          Role       @default(CAISSIER)
  email         String     @unique @db.VarChar(250)

  Produits      Produits[]  // Relation avec les produits
  Ventes        Ventes[]    // Relation avec les ventes
  Receptions    Receptions[] // Relation avec les réceptions
  Inventaires   Inventaires[] // Relation avec les inventaires
}

model Fournisseurs {
  id            Int         @id @default(autoincrement())
  nom           String      @db.VarChar(100)

  Receptions    Receptions[] // Relation avec les réceptions
}

model Produits {
  id            Int         @id @default(autoincrement())
  nom           String      @db.VarChar(250)
  stock         Int
  prix          Decimal     @db.Decimal(15, 2)
  seuil         Int
  categorie     String      @db.VarChar(250)
  date_ajout    DateTime    @db.Date
  code_barre    String?     @unique @db.VarChar(100)
  utilisateurId Int
  utilisateurs   Utilisateurs @relation(fields: [utilisateurId], references: [id])

  DetailVentes  DetailVentes[] // Relation avec les détails de vente
  Inventaires   Inventaires[]  // Relation avec les inventaires
  Mouvents      Mouvents[]     // Relation avec les mouvements
  DetailReceptions DetailReceptions[] // Relation avec les détails de réception
}

model Ventes {
  id            Int         @id @default(autoincrement())
  date_vente    DateTime    @db.Date
  utilisateurId Int
  utilisateurs   Utilisateurs @relation(fields: [utilisateurId], references: [id])

  DetailVentes  DetailVentes[] // Relation avec les détails de vente
}

model DetailVentes {
  id            Int         @id @default(autoincrement())
  montant_total Int
  quantite_vendue Int
  venteId       Int
  produitId     Int
  ventes         Ventes        @relation(fields: [venteId], references: [id])
  produits       Produits      @relation(fields: [produitId], references: [id])
}

model Receptions {
  id            Int         @id @default(autoincrement())
  date_reception DateTime   @db.Date
  fournisseurId  Int
  utilisateurId  Int
  fournisseurs    Fournisseurs @relation(fields: [fournisseurId], references: [id])
  utilisateurs    Utilisateurs @relation(fields: [utilisateurId], references: [id])

  DetailReceptions DetailReceptions[] // Relation avec les détails de réception
}

model Inventaires {
  id            Int         @id @default(autoincrement())
  note          String      @db.Text
  quantite      Int
  date_maj      DateTime    @db.Date
  utilisateurId Int
  produitId     Int
  utilisateurs   Utilisateurs @relation(fields: [utilisateurId], references: [id])
  produits       Produits     @relation(fields: [produitId], references: [id])
}

model DetailReceptions {
  id            Int         @id @default(autoincrement())
  quantite      Int
  receptionId   Int
  produitId     Int
  receptions     Receptions   @relation(fields: [receptionId], references: [id])
  produits       Produits     @relation(fields: [produitId], references: [id])
}

model Mouvents {
  id            Int         @id @default(autoincrement())
  quantite      Int
  produitId     Int
  produits       Produits     @relation(fields: [produitId], references: [id])
}
